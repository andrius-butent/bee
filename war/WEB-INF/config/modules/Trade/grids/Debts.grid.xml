<?xml version="1.0" encoding="UTF-8"?>
<g:Grid xmlns="http://www.butent.com/column" xmlns:g="http://www.butent.com/grid"
        xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ui="http://www.butent.com/ui"
        name="Debts" viewName="Debts" disabledActions="add delete" readOnly="true"
        filter="Debt > 0" caption="=debts">

	<g:columns xmlns="http://www.butent.com/column" xmlns:g="http://www.butent.com/grid">
		<RelColumn name="CustomerCode" caption="=companyCode" label="=companyCode" />
		<RelColumn name="Customer" renderColumns="CustomerName" caption="=company" label="=company" editEnabled="true" />
		<!-- Duplicate filter options with RelColumn-->
		<DataColumn name="FinancialStateName"
				        caption="=financialState" label="=financialState" filterSupplier="list"/>
		<RelColumn name="SaleSeries" />
		<DataColumn name="InvoiceNo" />
		<RelColumn name="Manager" />
		<DataColumn name="Date" />
		<DataColumn name="Term" caption="=trdTerm" label="=trdTerm"/>
		<DataColumn name="DaysForPayment" caption="=trdDaysForPayment"
		  label="=trdDaysForPayment" autoFit="true" >
		  <renderToken source="DaysForPayment" suffix=" d."/>
		</DataColumn>
		<CalcColumn name="Overdue" type="string" caption="=trdInvoiceOverdue" label="=trdInvoiceOverdue"
		 autoFit="true">
		   <render>
		    <ui:function>
		       var diff = 0,
		        start = 0;
		        end = new Date();
            days = 0,
            text = '';

          if (row.Term != null) {
            start = row.Term;
          } else if (row.Date != null) {
            start = row.Date;
          } else {
            return null;
          }

          diff = end.getTime() - start;

          days = parseInt(diff / 1000 / 60 / 60 / 24, 10);

          text = days + ' ' + $wnd.Bee_maybeTranslate('=dayShort');
          return text;
		    </ui:function>
		  </render>
		</CalcColumn>

		<PropColumn name="AverageOverdue" type="string" caption="=trdInvoiceAverageOverdue"
								cellType="html" label="=trdInvoiceAverageOverdue" horizontalAlignment="right">
			<style>
				<bodyStyle><ui:class>bee-ActionCellLink</ui:class></bodyStyle>
			</style>
			<render>
				<ui:expression>row.AverageOverdue * (-1)</ui:expression>
			</render>
		</PropColumn>
		<PropColumn name="AverageOverdue2" type="string" label="Apmokėtų vėlavimas"
            		horizontalAlignment="right" />

		<DataColumn name="Amount" />
		<DataColumn name="CurrencyName" />
		<DataColumn name="PaymentTime" />
		<DataColumn name="Paid" />
		<!--
		TODO:
		<DataColumn name="LastPaidAmount" />
		-->
		<DataColumn name="Debt" />
		<RelColumn name="BankruptcyRisk" renderColumns="BankruptcyRiskName" caption="=clientBankruptcyRisk" label="=clientBankruptcyRisk"/>
		<RelColumn name="DelayedPaymentRisk" renderColumns="DelayedPaymentRiskName" caption="=clientDelayedPaymentRisk" label="=clientDelayedPaymentRisk"/>
		<CalcColumn name="AppointmentsCount" type="integer" sortBy="AppointmentsCount"  caption="=calListOfActions" label="=calListOfActions">
		  <style>
        <bodyStyle><ui:class>bee-ActionCellLink</ui:class></bodyStyle>
      </style>
      <render>
        <ui:function>
          return row.AppointmentsCount;
        </ui:function>
      </render>
		</CalcColumn>
		<DataColumn name="LastAppointment"  caption ="=calLastActionDate" label="=calLastActionDate"/>
		<DataColumn name="LastestPayment" label="=trdNoPaymentPeriod" format="date_time_short" caption="=trdLatestSalePayment" visible="false" />
	</g:columns>
</g:Grid>
